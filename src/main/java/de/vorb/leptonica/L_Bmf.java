package de.vorb.leptonica;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : C:\Users\Paul\Studium\Masterarbeit\Entwicklung\VS2013\tesseract-vs2013\liblept\include\bmf.h:44</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("leptonica") 
public class L_Bmf extends StructObject {
	static {
		BridJ.register();
	}
	/**
	 * pixa of bitmaps for 93 characters<br>
	 * C type : Pixa*
	 */
	@Field(0) 
	public Pointer<Pixa > pixa() {
		return this.io.getPointerField(this, 0);
	}
	/**
	 * pixa of bitmaps for 93 characters<br>
	 * C type : Pixa*
	 */
	@Field(0) 
	public L_Bmf pixa(Pointer<Pixa > pixa) {
		this.io.setPointerField(this, 0, pixa);
		return this;
	}
	/**
	 * font size (in points at 300 ppi)<br>
	 * C type : l_int32
	 */
	@Field(1) 
	public int size() {
		return this.io.getIntField(this, 1);
	}
	/**
	 * font size (in points at 300 ppi)<br>
	 * C type : l_int32
	 */
	@Field(1) 
	public L_Bmf size(int size) {
		this.io.setIntField(this, 1, size);
		return this;
	}
	/**
	 * directory containing font bitmaps<br>
	 * C type : char*
	 */
	@Field(2) 
	public Pointer<Byte > directory() {
		return this.io.getPointerField(this, 2);
	}
	/**
	 * directory containing font bitmaps<br>
	 * C type : char*
	 */
	@Field(2) 
	public L_Bmf directory(Pointer<Byte > directory) {
		this.io.setPointerField(this, 2, directory);
		return this;
	}
	/**
	 * baseline offset for ascii 33 - 57<br>
	 * C type : l_int32
	 */
	@Field(3) 
	public int baseline1() {
		return this.io.getIntField(this, 3);
	}
	/**
	 * baseline offset for ascii 33 - 57<br>
	 * C type : l_int32
	 */
	@Field(3) 
	public L_Bmf baseline1(int baseline1) {
		this.io.setIntField(this, 3, baseline1);
		return this;
	}
	/**
	 * baseline offset for ascii 58 - 91<br>
	 * C type : l_int32
	 */
	@Field(4) 
	public int baseline2() {
		return this.io.getIntField(this, 4);
	}
	/**
	 * baseline offset for ascii 58 - 91<br>
	 * C type : l_int32
	 */
	@Field(4) 
	public L_Bmf baseline2(int baseline2) {
		this.io.setIntField(this, 4, baseline2);
		return this;
	}
	/**
	 * baseline offset for ascii 93 - 126<br>
	 * C type : l_int32
	 */
	@Field(5) 
	public int baseline3() {
		return this.io.getIntField(this, 5);
	}
	/**
	 * baseline offset for ascii 93 - 126<br>
	 * C type : l_int32
	 */
	@Field(5) 
	public L_Bmf baseline3(int baseline3) {
		this.io.setIntField(this, 5, baseline3);
		return this;
	}
	/**
	 * max height of line of chars<br>
	 * C type : l_int32
	 */
	@Field(6) 
	public int lineheight() {
		return this.io.getIntField(this, 6);
	}
	/**
	 * max height of line of chars<br>
	 * C type : l_int32
	 */
	@Field(6) 
	public L_Bmf lineheight(int lineheight) {
		this.io.setIntField(this, 6, lineheight);
		return this;
	}
	/**
	 * pixel dist between char bitmaps<br>
	 * C type : l_int32
	 */
	@Field(7) 
	public int kernwidth() {
		return this.io.getIntField(this, 7);
	}
	/**
	 * pixel dist between char bitmaps<br>
	 * C type : l_int32
	 */
	@Field(7) 
	public L_Bmf kernwidth(int kernwidth) {
		this.io.setIntField(this, 7, kernwidth);
		return this;
	}
	/**
	 * pixel dist between word bitmaps<br>
	 * C type : l_int32
	 */
	@Field(8) 
	public int spacewidth() {
		return this.io.getIntField(this, 8);
	}
	/**
	 * pixel dist between word bitmaps<br>
	 * C type : l_int32
	 */
	@Field(8) 
	public L_Bmf spacewidth(int spacewidth) {
		this.io.setIntField(this, 8, spacewidth);
		return this;
	}
	/**
	 * extra vertical space between text lines<br>
	 * C type : l_int32
	 */
	@Field(9) 
	public int vertlinesep() {
		return this.io.getIntField(this, 9);
	}
	/**
	 * extra vertical space between text lines<br>
	 * C type : l_int32
	 */
	@Field(9) 
	public L_Bmf vertlinesep(int vertlinesep) {
		this.io.setIntField(this, 9, vertlinesep);
		return this;
	}
	/**
	 * table mapping ascii --> font index<br>
	 * C type : l_int32*
	 */
	@Field(10) 
	public Pointer<Integer > fonttab() {
		return this.io.getPointerField(this, 10);
	}
	/**
	 * table mapping ascii --> font index<br>
	 * C type : l_int32*
	 */
	@Field(10) 
	public L_Bmf fonttab(Pointer<Integer > fonttab) {
		this.io.setPointerField(this, 10, fonttab);
		return this;
	}
	/**
	 * table mapping ascii --> baseline offset<br>
	 * C type : l_int32*
	 */
	@Field(11) 
	public Pointer<Integer > baselinetab() {
		return this.io.getPointerField(this, 11);
	}
	/**
	 * table mapping ascii --> baseline offset<br>
	 * C type : l_int32*
	 */
	@Field(11) 
	public L_Bmf baselinetab(Pointer<Integer > baselinetab) {
		this.io.setPointerField(this, 11, baselinetab);
		return this;
	}
	/**
	 * table mapping ascii --> char width<br>
	 * C type : l_int32*
	 */
	@Field(12) 
	public Pointer<Integer > widthtab() {
		return this.io.getPointerField(this, 12);
	}
	/**
	 * table mapping ascii --> char width<br>
	 * C type : l_int32*
	 */
	@Field(12) 
	public L_Bmf widthtab(Pointer<Integer > widthtab) {
		this.io.setPointerField(this, 12, widthtab);
		return this;
	}
	public L_Bmf() {
		super();
	}
	public L_Bmf(Pointer pointer) {
		super(pointer);
	}
}
