package de.vorb.leptonica;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : C:\Users\Paul\Studium\Masterarbeit\Entwicklung\VS2013\tesseract-vs2013\liblept\include\jbclass.h:96</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("leptonica") 
public class JbData extends StructObject {
	static {
		BridJ.register();
	}
	/**
	 * template composite for all classes<br>
	 * C type : Pix*
	 */
	@Field(0) 
	public Pointer<Pix > pix() {
		return this.io.getPointerField(this, 0);
	}
	/**
	 * template composite for all classes<br>
	 * C type : Pix*
	 */
	@Field(0) 
	public JbData pix(Pointer<Pix > pix) {
		this.io.setPointerField(this, 0, pix);
		return this;
	}
	/**
	 * number of pages<br>
	 * C type : l_int32
	 */
	@Field(1) 
	public int npages() {
		return this.io.getIntField(this, 1);
	}
	/**
	 * number of pages<br>
	 * C type : l_int32
	 */
	@Field(1) 
	public JbData npages(int npages) {
		this.io.setIntField(this, 1, npages);
		return this;
	}
	/**
	 * max width of original page images<br>
	 * C type : l_int32
	 */
	@Field(2) 
	public int w() {
		return this.io.getIntField(this, 2);
	}
	/**
	 * max width of original page images<br>
	 * C type : l_int32
	 */
	@Field(2) 
	public JbData w(int w) {
		this.io.setIntField(this, 2, w);
		return this;
	}
	/**
	 * max height of original page images<br>
	 * C type : l_int32
	 */
	@Field(3) 
	public int h() {
		return this.io.getIntField(this, 3);
	}
	/**
	 * max height of original page images<br>
	 * C type : l_int32
	 */
	@Field(3) 
	public JbData h(int h) {
		this.io.setIntField(this, 3, h);
		return this;
	}
	/**
	 * number of classes<br>
	 * C type : l_int32
	 */
	@Field(4) 
	public int nclass() {
		return this.io.getIntField(this, 4);
	}
	/**
	 * number of classes<br>
	 * C type : l_int32
	 */
	@Field(4) 
	public JbData nclass(int nclass) {
		this.io.setIntField(this, 4, nclass);
		return this;
	}
	/**
	 * lattice width for template composite<br>
	 * C type : l_int32
	 */
	@Field(5) 
	public int latticew() {
		return this.io.getIntField(this, 5);
	}
	/**
	 * lattice width for template composite<br>
	 * C type : l_int32
	 */
	@Field(5) 
	public JbData latticew(int latticew) {
		this.io.setIntField(this, 5, latticew);
		return this;
	}
	/**
	 * lattice height for template composite<br>
	 * C type : l_int32
	 */
	@Field(6) 
	public int latticeh() {
		return this.io.getIntField(this, 6);
	}
	/**
	 * lattice height for template composite<br>
	 * C type : l_int32
	 */
	@Field(6) 
	public JbData latticeh(int latticeh) {
		this.io.setIntField(this, 6, latticeh);
		return this;
	}
	/**
	 * array of class ids for each component<br>
	 * C type : Numa*
	 */
	@Field(7) 
	public Pointer<Numa > naclass() {
		return this.io.getPointerField(this, 7);
	}
	/**
	 * array of class ids for each component<br>
	 * C type : Numa*
	 */
	@Field(7) 
	public JbData naclass(Pointer<Numa > naclass) {
		this.io.setPointerField(this, 7, naclass);
		return this;
	}
	/**
	 * array of page nums for each component<br>
	 * C type : Numa*
	 */
	@Field(8) 
	public Pointer<Numa > napage() {
		return this.io.getPointerField(this, 8);
	}
	/**
	 * array of page nums for each component<br>
	 * C type : Numa*
	 */
	@Field(8) 
	public JbData napage(Pointer<Numa > napage) {
		this.io.setPointerField(this, 8, napage);
		return this;
	}
	/**
	 * array of UL corners at which the<br>
	 * C type : Pta*
	 */
	@Field(9) 
	public Pointer<Pta > ptaul() {
		return this.io.getPointerField(this, 9);
	}
	/**
	 * array of UL corners at which the<br>
	 * C type : Pta*
	 */
	@Field(9) 
	public JbData ptaul(Pointer<Pta > ptaul) {
		this.io.setPointerField(this, 9, ptaul);
		return this;
	}
	public JbData() {
		super();
	}
	public JbData(Pointer pointer) {
		super(pointer);
	}
}
