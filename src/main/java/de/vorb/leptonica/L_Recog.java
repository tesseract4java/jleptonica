package de.vorb.leptonica;

import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;

/**
 * <i>native declaration :
 * C:\Users\Paul\Studium\Masterarbeit\Entwicklung\VS2013\
 * tesseract-vs2013\liblept\include\recog.h:98</i><br>
 * This file was autogenerated by <a
 * href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a
 * href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few
 * opensource projects.</a>.<br>
 * For help, please visit <a
 * href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a
 * href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("leptonica")
public class L_Recog extends StructObject {
    static {
        BridJ.register();
    }

    /**
     * scale all examples to this width;<br>
     * C type : l_int32
     */
    @Field(0)
    public int scalew() {
        return this.io.getIntField(this, 0);
    }

    /**
     * scale all examples to this width;<br>
     * C type : l_int32
     */
    @Field(0)
    public L_Recog scalew(int scalew) {
        this.io.setIntField(this, 0, scalew);
        return this;
    }

    /**
     * scale all examples to this height;<br>
     * C type : l_int32
     */
    @Field(1)
    public int scaleh() {
        return this.io.getIntField(this, 1);
    }

    /**
     * scale all examples to this height;<br>
     * C type : l_int32
     */
    @Field(1)
    public L_Recog scaleh(int scaleh) {
        this.io.setIntField(this, 1, scaleh);
        return this;
    }

    /**
     * template type: either an average of<br>
     * C type : l_int32
     */
    @Field(2)
    public int templ_type() {
        return this.io.getIntField(this, 2);
    }

    /**
     * template type: either an average of<br>
     * C type : l_int32
     */
    @Field(2)
    public L_Recog templ_type(int templ_type) {
        this.io.setIntField(this, 2, templ_type);
        return this;
    }

    /**
     * initialize container arrays to this<br>
     * C type : l_int32
     */
    @Field(3)
    public int maxarraysize() {
        return this.io.getIntField(this, 3);
    }

    /**
     * initialize container arrays to this<br>
     * C type : l_int32
     */
    @Field(3)
    public L_Recog maxarraysize(int maxarraysize) {
        this.io.setIntField(this, 3, maxarraysize);
        return this;
    }

    /**
     * size of character set<br>
     * C type : l_int32
     */
    @Field(4)
    public int setsize() {
        return this.io.getIntField(this, 4);
    }

    /**
     * size of character set<br>
     * C type : l_int32
     */
    @Field(4)
    public L_Recog setsize(int setsize) {
        this.io.setIntField(this, 4, setsize);
        return this;
    }

    /**
     * for binarizing if depth > 1<br>
     * C type : l_int32
     */
    @Field(5)
    public int threshold() {
        return this.io.getIntField(this, 5);
    }

    /**
     * for binarizing if depth > 1<br>
     * C type : l_int32
     */
    @Field(5)
    public L_Recog threshold(int threshold) {
        this.io.setIntField(this, 5, threshold);
        return this;
    }

    /**
     * vertical jiggle on nominal centroid<br>
     * C type : l_int32
     */
    @Field(6)
    public int maxyshift() {
        return this.io.getIntField(this, 6);
    }

    /**
     * vertical jiggle on nominal centroid<br>
     * C type : l_int32
     */
    @Field(6)
    public L_Recog maxyshift(int maxyshift) {
        this.io.setIntField(this, 6, maxyshift);
        return this;
    }

    /**
     * +- allowed fractional asperity ratio<br>
     * C type : l_float32
     */
    @Field(7)
    public float asperity_fr() {
        return this.io.getFloatField(this, 7);
    }

    /**
     * +- allowed fractional asperity ratio<br>
     * C type : l_float32
     */
    @Field(7)
    public L_Recog asperity_fr(float asperity_fr) {
        this.io.setFloatField(this, 7, asperity_fr);
        return this;
    }

    /**
     * one of L_ARABIC_NUMERALS, etc.<br>
     * C type : l_int32
     */
    @Field(8)
    public int charset_type() {
        return this.io.getIntField(this, 8);
    }

    /**
     * one of L_ARABIC_NUMERALS, etc.<br>
     * C type : l_int32
     */
    @Field(8)
    public L_Recog charset_type(int charset_type) {
        this.io.setIntField(this, 8, charset_type);
        return this;
    }

    /**
     * expected number of classes in charset<br>
     * C type : l_int32
     */
    @Field(9)
    public int charset_size() {
        return this.io.getIntField(this, 9);
    }

    /**
     * expected number of classes in charset<br>
     * C type : l_int32
     */
    @Field(9)
    public L_Recog charset_size(int charset_size) {
        this.io.setIntField(this, 9, charset_size);
        return this;
    }

    /**
     * dir with bootstrap pixa charsets<br>
     * C type : char*
     */
    @Field(10)
    public Pointer<Byte> bootdir() {
        return this.io.getPointerField(this, 10);
    }

    /**
     * dir with bootstrap pixa charsets<br>
     * C type : char*
     */
    @Field(10)
    public L_Recog bootdir(Pointer<Byte> bootdir) {
        this.io.setPointerField(this, 10, bootdir);
        return this;
    }

    /**
     * file pattern for bootstrap pixa charsets<br>
     * C type : char*
     */
    @Field(11)
    public Pointer<Byte> bootpattern() {
        return this.io.getPointerField(this, 11);
    }

    /**
     * file pattern for bootstrap pixa charsets<br>
     * C type : char*
     */
    @Field(11)
    public L_Recog bootpattern(Pointer<Byte> bootpattern) {
        this.io.setPointerField(this, 11, bootpattern);
        return this;
    }

    /**
     * path for single bootstrap pixa charset<br>
     * C type : char*
     */
    @Field(12)
    public Pointer<Byte> bootpath() {
        return this.io.getPointerField(this, 12);
    }

    /**
     * path for single bootstrap pixa charset<br>
     * C type : char*
     */
    @Field(12)
    public L_Recog bootpath(Pointer<Byte> bootpath) {
        this.io.setPointerField(this, 12, bootpath);
        return this;
    }

    /**
     * min number of samples without padding<br>
     * C type : l_int32
     */
    @Field(13)
    public int min_nopad() {
        return this.io.getIntField(this, 13);
    }

    /**
     * min number of samples without padding<br>
     * C type : l_int32
     */
    @Field(13)
    public L_Recog min_nopad(int min_nopad) {
        this.io.setIntField(this, 13, min_nopad);
        return this;
    }

    /**
     * max number of samples after padding<br>
     * C type : l_int32
     */
    @Field(14)
    public int max_afterpad() {
        return this.io.getIntField(this, 14);
    }

    /**
     * max number of samples after padding<br>
     * C type : l_int32
     */
    @Field(14)
    public L_Recog max_afterpad(int max_afterpad) {
        this.io.setIntField(this, 14, max_afterpad);
        return this;
    }

    /**
     * keep track of number of training samples<br>
     * C type : l_int32
     */
    @Field(15)
    public int samplenum() {
        return this.io.getIntField(this, 15);
    }

    /**
     * keep track of number of training samples<br>
     * C type : l_int32
     */
    @Field(15)
    public L_Recog samplenum(int samplenum) {
        this.io.setIntField(this, 15, samplenum);
        return this;
    }

    /**
     * min width of averaged unscaled templates<br>
     * C type : l_int32
     */
    @Field(16)
    public int minwidth_u() {
        return this.io.getIntField(this, 16);
    }

    /**
     * min width of averaged unscaled templates<br>
     * C type : l_int32
     */
    @Field(16)
    public L_Recog minwidth_u(int minwidth_u) {
        this.io.setIntField(this, 16, minwidth_u);
        return this;
    }

    /**
     * max width of averaged unscaled templates<br>
     * C type : l_int32
     */
    @Field(17)
    public int maxwidth_u() {
        return this.io.getIntField(this, 17);
    }

    /**
     * max width of averaged unscaled templates<br>
     * C type : l_int32
     */
    @Field(17)
    public L_Recog maxwidth_u(int maxwidth_u) {
        this.io.setIntField(this, 17, maxwidth_u);
        return this;
    }

    /**
     * min height of averaged unscaled templates<br>
     * C type : l_int32
     */
    @Field(18)
    public int minheight_u() {
        return this.io.getIntField(this, 18);
    }

    /**
     * min height of averaged unscaled templates<br>
     * C type : l_int32
     */
    @Field(18)
    public L_Recog minheight_u(int minheight_u) {
        this.io.setIntField(this, 18, minheight_u);
        return this;
    }

    /**
     * max height of averaged unscaled templates<br>
     * C type : l_int32
     */
    @Field(19)
    public int maxheight_u() {
        return this.io.getIntField(this, 19);
    }

    /**
     * max height of averaged unscaled templates<br>
     * C type : l_int32
     */
    @Field(19)
    public L_Recog maxheight_u(int maxheight_u) {
        this.io.setIntField(this, 19, maxheight_u);
        return this;
    }

    /**
     * min width of averaged scaled templates<br>
     * C type : l_int32
     */
    @Field(20)
    public int minwidth() {
        return this.io.getIntField(this, 20);
    }

    /**
     * min width of averaged scaled templates<br>
     * C type : l_int32
     */
    @Field(20)
    public L_Recog minwidth(int minwidth) {
        this.io.setIntField(this, 20, minwidth);
        return this;
    }

    /**
     * max width of averaged scaled templates<br>
     * C type : l_int32
     */
    @Field(21)
    public int maxwidth() {
        return this.io.getIntField(this, 21);
    }

    /**
     * max width of averaged scaled templates<br>
     * C type : l_int32
     */
    @Field(21)
    public L_Recog maxwidth(int maxwidth) {
        this.io.setIntField(this, 21, maxwidth);
        return this;
    }

    /**
     * set to 1 when averaged bitmaps are made<br>
     * C type : l_int32
     */
    @Field(22)
    public int ave_done() {
        return this.io.getIntField(this, 22);
    }

    /**
     * set to 1 when averaged bitmaps are made<br>
     * C type : l_int32
     */
    @Field(22)
    public L_Recog ave_done(int ave_done) {
        this.io.setIntField(this, 22, ave_done);
        return this;
    }

    /**
     * set to 1 when training is complete or<br>
     * C type : l_int32
     */
    @Field(23)
    public int train_done() {
        return this.io.getIntField(this, 23);
    }

    /**
     * set to 1 when training is complete or<br>
     * C type : l_int32
     */
    @Field(23)
    public L_Recog train_done(int train_done) {
        this.io.setIntField(this, 23, train_done);
        return this;
    }

    /**
     * min component width kept in splitting<br>
     * C type : l_int32
     */
    @Field(24)
    public int min_splitw() {
        return this.io.getIntField(this, 24);
    }

    /**
     * min component width kept in splitting<br>
     * C type : l_int32
     */
    @Field(24)
    public L_Recog min_splitw(int min_splitw) {
        this.io.setIntField(this, 24, min_splitw);
        return this;
    }

    /**
     * min component height kept in splitting<br>
     * C type : l_int32
     */
    @Field(25)
    public int min_splith() {
        return this.io.getIntField(this, 25);
    }

    /**
     * min component height kept in splitting<br>
     * C type : l_int32
     */
    @Field(25)
    public L_Recog min_splith(int min_splith) {
        this.io.setIntField(this, 25, min_splith);
        return this;
    }

    /**
     * max component height kept in splitting<br>
     * C type : l_int32
     */
    @Field(26)
    public int max_splith() {
        return this.io.getIntField(this, 26);
    }

    /**
     * max component height kept in splitting<br>
     * C type : l_int32
     */
    @Field(26)
    public L_Recog max_splith(int max_splith) {
        this.io.setIntField(this, 26, max_splith);
        return this;
    }

    /**
     * text array for arbitrary char set<br>
     * C type : Sarray*
     */
    @Field(27)
    public Pointer<Sarray> sa_text() {
        return this.io.getPointerField(this, 27);
    }

    /**
     * text array for arbitrary char set<br>
     * C type : Sarray*
     */
    @Field(27)
    public L_Recog sa_text(Pointer<Sarray> sa_text) {
        this.io.setPointerField(this, 27, sa_text);
        return this;
    }

    /**
     * index-to-char lut for arbitrary char set<br>
     * C type : L_Dna*
     */
    @Field(28)
    public Pointer<L_Dna> dna_tochar() {
        return this.io.getPointerField(this, 28);
    }

    /**
     * index-to-char lut for arbitrary char set<br>
     * C type : L_Dna*
     */
    @Field(28)
    public L_Recog dna_tochar(Pointer<L_Dna> dna_tochar) {
        this.io.setPointerField(this, 28, dna_tochar);
        return this;
    }

    /**
     * table for finding centroids<br>
     * C type : l_int32*
     */
    @Field(29)
    public Pointer<Integer> centtab() {
        return this.io.getPointerField(this, 29);
    }

    /**
     * table for finding centroids<br>
     * C type : l_int32*
     */
    @Field(29)
    public L_Recog centtab(Pointer<Integer> centtab) {
        this.io.setPointerField(this, 29, centtab);
        return this;
    }

    /**
     * table for finding pixel sums<br>
     * C type : l_int32*
     */
    @Field(30)
    public Pointer<Integer> sumtab() {
        return this.io.getPointerField(this, 30);
    }

    /**
     * table for finding pixel sums<br>
     * C type : l_int32*
     */
    @Field(30)
    public L_Recog sumtab(Pointer<Integer> sumtab) {
        this.io.setPointerField(this, 30, sumtab);
        return this;
    }

    /**
     * serialized filename (if read)<br>
     * C type : char*
     */
    @Field(31)
    public Pointer<Byte> fname() {
        return this.io.getPointerField(this, 31);
    }

    /**
     * serialized filename (if read)<br>
     * C type : char*
     */
    @Field(31)
    public L_Recog fname(Pointer<Byte> fname) {
        this.io.setPointerField(this, 31, fname);
        return this;
    }

    /**
     * all unscaled bitmaps for each class<br>
     * C type : Pixaa*
     */
    @Field(32)
    public Pointer<Pixaa> pixaa_u() {
        return this.io.getPointerField(this, 32);
    }

    /**
     * all unscaled bitmaps for each class<br>
     * C type : Pixaa*
     */
    @Field(32)
    public L_Recog pixaa_u(Pointer<Pixaa> pixaa_u) {
        this.io.setPointerField(this, 32, pixaa_u);
        return this;
    }

    /**
     * averaged unscaled bitmaps for each class<br>
     * C type : Pixa*
     */
    @Field(33)
    public Pointer<Pixa> pixa_u() {
        return this.io.getPointerField(this, 33);
    }

    /**
     * averaged unscaled bitmaps for each class<br>
     * C type : Pixa*
     */
    @Field(33)
    public L_Recog pixa_u(Pointer<Pixa> pixa_u) {
        this.io.setPointerField(this, 33, pixa_u);
        return this;
    }

    /**
     * centroids of all unscaled bitmaps<br>
     * C type : Ptaa*
     */
    @Field(34)
    public Pointer<Ptaa> ptaa_u() {
        return this.io.getPointerField(this, 34);
    }

    /**
     * centroids of all unscaled bitmaps<br>
     * C type : Ptaa*
     */
    @Field(34)
    public L_Recog ptaa_u(Pointer<Ptaa> ptaa_u) {
        this.io.setPointerField(this, 34, ptaa_u);
        return this;
    }

    /**
     * centroids of unscaled averaged bitmaps<br>
     * C type : Pta*
     */
    @Field(35)
    public Pointer<Pta> pta_u() {
        return this.io.getPointerField(this, 35);
    }

    /**
     * centroids of unscaled averaged bitmaps<br>
     * C type : Pta*
     */
    @Field(35)
    public L_Recog pta_u(Pointer<Pta> pta_u) {
        this.io.setPointerField(this, 35, pta_u);
        return this;
    }

    /**
     * area of all unscaled bitmap examples<br>
     * C type : Numaa*
     */
    @Field(36)
    public Pointer<Numaa> naasum_u() {
        return this.io.getPointerField(this, 36);
    }

    /**
     * area of all unscaled bitmap examples<br>
     * C type : Numaa*
     */
    @Field(36)
    public L_Recog naasum_u(Pointer<Numaa> naasum_u) {
        this.io.setPointerField(this, 36, naasum_u);
        return this;
    }

    /**
     * area of unscaled averaged bitmaps<br>
     * C type : Numa*
     */
    @Field(37)
    public Pointer<Numa> nasum_u() {
        return this.io.getPointerField(this, 37);
    }

    /**
     * area of unscaled averaged bitmaps<br>
     * C type : Numa*
     */
    @Field(37)
    public L_Recog nasum_u(Pointer<Numa> nasum_u) {
        this.io.setPointerField(this, 37, nasum_u);
        return this;
    }

    /**
     * all bitmap examples for each class<br>
     * C type : Pixaa*
     */
    @Field(38)
    public Pointer<Pixaa> pixaa() {
        return this.io.getPointerField(this, 38);
    }

    /**
     * all bitmap examples for each class<br>
     * C type : Pixaa*
     */
    @Field(38)
    public L_Recog pixaa(Pointer<Pixaa> pixaa) {
        this.io.setPointerField(this, 38, pixaa);
        return this;
    }

    /**
     * averaged bitmaps for each class<br>
     * C type : Pixa*
     */
    @Field(39)
    public Pointer<Pixa> pixa() {
        return this.io.getPointerField(this, 39);
    }

    /**
     * averaged bitmaps for each class<br>
     * C type : Pixa*
     */
    @Field(39)
    public L_Recog pixa(Pointer<Pixa> pixa) {
        this.io.setPointerField(this, 39, pixa);
        return this;
    }

    /**
     * centroids of all bitmap examples<br>
     * C type : Ptaa*
     */
    @Field(40)
    public Pointer<Ptaa> ptaa() {
        return this.io.getPointerField(this, 40);
    }

    /**
     * centroids of all bitmap examples<br>
     * C type : Ptaa*
     */
    @Field(40)
    public L_Recog ptaa(Pointer<Ptaa> ptaa) {
        this.io.setPointerField(this, 40, ptaa);
        return this;
    }

    /**
     * centroids of averaged bitmaps<br>
     * C type : Pta*
     */
    @Field(41)
    public Pointer<Pta> pta() {
        return this.io.getPointerField(this, 41);
    }

    /**
     * centroids of averaged bitmaps<br>
     * C type : Pta*
     */
    @Field(41)
    public L_Recog pta(Pointer<Pta> pta) {
        this.io.setPointerField(this, 41, pta);
        return this;
    }

    /**
     * area of all bitmap examples<br>
     * C type : Numaa*
     */
    @Field(42)
    public Pointer<Numaa> naasum() {
        return this.io.getPointerField(this, 42);
    }

    /**
     * area of all bitmap examples<br>
     * C type : Numaa*
     */
    @Field(42)
    public L_Recog naasum(Pointer<Numaa> naasum) {
        this.io.setPointerField(this, 42, naasum);
        return this;
    }

    /**
     * area of averaged bitmaps<br>
     * C type : Numa*
     */
    @Field(43)
    public Pointer<Numa> nasum() {
        return this.io.getPointerField(this, 43);
    }

    /**
     * area of averaged bitmaps<br>
     * C type : Numa*
     */
    @Field(43)
    public L_Recog nasum(Pointer<Numa> nasum) {
        this.io.setPointerField(this, 43, nasum);
        return this;
    }

    /**
     * input training images<br>
     * C type : Pixa*
     */
    @Field(44)
    public Pointer<Pixa> pixa_tr() {
        return this.io.getPointerField(this, 44);
    }

    /**
     * input training images<br>
     * C type : Pixa*
     */
    @Field(44)
    public L_Recog pixa_tr(Pointer<Pixa> pixa_tr) {
        this.io.setPointerField(this, 44, pixa_tr);
        return this;
    }

    /**
     * unscaled and scaled averaged bitmaps<br>
     * C type : Pixa*
     */
    @Field(45)
    public Pointer<Pixa> pixadb_ave() {
        return this.io.getPointerField(this, 45);
    }

    /**
     * unscaled and scaled averaged bitmaps<br>
     * C type : Pixa*
     */
    @Field(45)
    public L_Recog pixadb_ave(Pointer<Pixa> pixadb_ave) {
        this.io.setPointerField(this, 45, pixadb_ave);
        return this;
    }

    /**
     * input images for identifying<br>
     * C type : Pixa*
     */
    @Field(46)
    public Pointer<Pixa> pixa_id() {
        return this.io.getPointerField(this, 46);
    }

    /**
     * input images for identifying<br>
     * C type : Pixa*
     */
    @Field(46)
    public L_Recog pixa_id(Pointer<Pixa> pixa_id) {
        this.io.setPointerField(this, 46, pixa_id);
        return this;
    }

    /**
     * debug: best match of input against ave.<br>
     * C type : Pix*
     */
    @Field(47)
    public Pointer<Pix> pixdb_ave() {
        return this.io.getPointerField(this, 47);
    }

    /**
     * debug: best match of input against ave.<br>
     * C type : Pix*
     */
    @Field(47)
    public L_Recog pixdb_ave(Pointer<Pix> pixdb_ave) {
        this.io.setPointerField(this, 47, pixdb_ave);
        return this;
    }

    /**
     * debug: best matches within range<br>
     * C type : Pix*
     */
    @Field(48)
    public Pointer<Pix> pixdb_range() {
        return this.io.getPointerField(this, 48);
    }

    /**
     * debug: best matches within range<br>
     * C type : Pix*
     */
    @Field(48)
    public L_Recog pixdb_range(Pointer<Pix> pixdb_range) {
        this.io.setPointerField(this, 48, pixdb_range);
        return this;
    }

    /**
     * debug: bootstrap training results<br>
     * C type : Pixa*
     */
    @Field(49)
    public Pointer<Pixa> pixadb_boot() {
        return this.io.getPointerField(this, 49);
    }

    /**
     * debug: bootstrap training results<br>
     * C type : Pixa*
     */
    @Field(49)
    public L_Recog pixadb_boot(Pointer<Pixa> pixadb_boot) {
        this.io.setPointerField(this, 49, pixadb_boot);
        return this;
    }

    /**
     * debug: splitting results<br>
     * C type : Pixa*
     */
    @Field(50)
    public Pointer<Pixa> pixadb_split() {
        return this.io.getPointerField(this, 50);
    }

    /**
     * debug: splitting results<br>
     * C type : Pixa*
     */
    @Field(50)
    public L_Recog pixadb_split(Pointer<Pixa> pixadb_split) {
        this.io.setPointerField(this, 50, pixadb_split);
        return this;
    }

    /**
     * directory for bitmapped fonts<br>
     * C type : char*
     */
    @Field(51)
    public Pointer<Byte> fontdir() {
        return this.io.getPointerField(this, 51);
    }

    /**
     * directory for bitmapped fonts<br>
     * C type : char*
     */
    @Field(51)
    public L_Recog fontdir(Pointer<Byte> fontdir) {
        this.io.setPointerField(this, 51, fontdir);
        return this;
    }

    /**
     * bmf fonts<br>
     * C type : L_Bmf*
     */
    @Field(52)
    public Pointer<L_Bmf> bmf() {
        return this.io.getPointerField(this, 52);
    }

    /**
     * bmf fonts<br>
     * C type : L_Bmf*
     */
    @Field(52)
    public L_Recog bmf(Pointer<L_Bmf> bmf) {
        this.io.setPointerField(this, 52, bmf);
        return this;
    }

    /**
     * font size of bmf; default is 6 pt<br>
     * C type : l_int32
     */
    @Field(53)
    public int bmf_size() {
        return this.io.getIntField(this, 53);
    }

    /**
     * font size of bmf; default is 6 pt<br>
     * C type : l_int32
     */
    @Field(53)
    public L_Recog bmf_size(int bmf_size) {
        this.io.setIntField(this, 53, bmf_size);
        return this;
    }

    /**
     * temp data used for image decoding<br>
     * C type : L_Rdid*
     */
    @Field(54)
    public Pointer<L_Rdid> did() {
        return this.io.getPointerField(this, 54);
    }

    /**
     * temp data used for image decoding<br>
     * C type : L_Rdid*
     */
    @Field(54)
    public L_Recog did(Pointer<L_Rdid> did) {
        this.io.setPointerField(this, 54, did);
        return this;
    }

    /**
     * temp data used for holding best char<br>
     * C type : L_Rch*
     */
    @Field(55)
    public Pointer<L_Rch> rch() {
        return this.io.getPointerField(this, 55);
    }

    /**
     * temp data used for holding best char<br>
     * C type : L_Rch*
     */
    @Field(55)
    public L_Recog rch(Pointer<L_Rch> rch) {
        this.io.setPointerField(this, 55, rch);
        return this;
    }

    /**
     * temp data used for array of best chars<br>
     * C type : L_Rcha*
     */
    @Field(56)
    public Pointer<L_Rcha> rcha() {
        return this.io.getPointerField(this, 56);
    }

    /**
     * temp data used for array of best chars<br>
     * C type : L_Rcha*
     */
    @Field(56)
    public L_Recog rcha(Pointer<L_Rcha> rcha) {
        this.io.setPointerField(this, 56, rcha);
        return this;
    }

    /**
     * 1 if using bootstrap samples; else 0<br>
     * C type : l_int32
     */
    @Field(57)
    public int bootrecog() {
        return this.io.getIntField(this, 57);
    }

    /**
     * 1 if using bootstrap samples; else 0<br>
     * C type : l_int32
     */
    @Field(57)
    public L_Recog bootrecog(int bootrecog) {
        this.io.setIntField(this, 57, bootrecog);
        return this;
    }

    /**
     * recog index in recoga; -1 if no parent<br>
     * C type : l_int32
     */
    @Field(58)
    public int index() {
        return this.io.getIntField(this, 58);
    }

    /**
     * recog index in recoga; -1 if no parent<br>
     * C type : l_int32
     */
    @Field(58)
    public L_Recog index(int index) {
        this.io.setIntField(this, 58, index);
        return this;
    }

    /**
     * ptr to parent array; can be null<br>
     * C type : L_Recoga*
     */
    @Field(59)
    public Pointer<L_Recoga> parent() {
        return this.io.getPointerField(this, 59);
    }

    /**
     * ptr to parent array; can be null<br>
     * C type : L_Recoga*
     */
    @Field(59)
    public L_Recog parent(Pointer<L_Recoga> parent) {
        this.io.setPointerField(this, 59, parent);
        return this;
    }

    public L_Recog() {
        super();
    }

    public L_Recog(Pointer pointer) {
        super(pointer);
    }
}
