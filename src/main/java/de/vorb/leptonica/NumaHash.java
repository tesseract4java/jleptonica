package de.vorb.leptonica;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * A hash table of Numas<br>
 * <i>native declaration : C:\Users\Paul\Studium\Masterarbeit\Entwicklung\VS2013\tesseract-vs2013\liblept\include\array.h:89</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class NumaHash extends Structure {
	/** C type : l_int32 */
	public int nbuckets;
	/**
	 * initial size of each numa that is made<br>
	 * C type : l_int32
	 */
	public int initsize;
	/** C type : Numa** */
	public de.vorb.leptonica.Numa.ByReference[] numa;
	public NumaHash() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("nbuckets", "initsize", "numa");
	}
	/**
	 * @param nbuckets C type : l_int32<br>
	 * @param initsize initial size of each numa that is made<br>
	 * C type : l_int32<br>
	 * @param numa C type : Numa**
	 */
	public NumaHash(int nbuckets, int initsize, de.vorb.leptonica.Numa.ByReference numa[]) {
		super();
		this.nbuckets = nbuckets;
		this.initsize = initsize;
		if ((numa.length != this.numa.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.numa = numa;
	}
	public static class ByReference extends NumaHash implements Structure.ByReference {
		
	};
	public static class ByValue extends NumaHash implements Structure.ByValue {
		
	};
}
