package de.vorb.leptonica;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : C:\Users\Paul\Studium\Masterarbeit\Entwicklung\VS2013\tesseract-vs2013\liblept\include\pix.h:594</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PixaComp extends Structure {
	/**
	 * number of PixComp in ptr array<br>
	 * C type : l_int32
	 */
	public int n;
	/**
	 * number of PixComp ptrs allocated<br>
	 * C type : l_int32
	 */
	public int nalloc;
	/**
	 * indexing offset into ptr array<br>
	 * C type : l_int32
	 */
	public int offset;
	/**
	 * the array of ptrs to PixComp<br>
	 * C type : PixComp**
	 */
	public de.vorb.leptonica.PixComp.ByReference[] pixc;
	/**
	 * array of boxes<br>
	 * C type : Boxa*
	 */
	public de.vorb.leptonica.Boxa.ByReference boxa;
	public PixaComp() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("n", "nalloc", "offset", "pixc", "boxa");
	}
	/**
	 * @param n number of PixComp in ptr array<br>
	 * C type : l_int32<br>
	 * @param nalloc number of PixComp ptrs allocated<br>
	 * C type : l_int32<br>
	 * @param offset indexing offset into ptr array<br>
	 * C type : l_int32<br>
	 * @param pixc the array of ptrs to PixComp<br>
	 * C type : PixComp**<br>
	 * @param boxa array of boxes<br>
	 * C type : Boxa*
	 */
	public PixaComp(int n, int nalloc, int offset, de.vorb.leptonica.PixComp.ByReference pixc[], de.vorb.leptonica.Boxa.ByReference boxa) {
		super();
		this.n = n;
		this.nalloc = nalloc;
		this.offset = offset;
		if ((pixc.length != this.pixc.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.pixc = pixc;
		this.boxa = boxa;
	}
	public static class ByReference extends PixaComp implements Structure.ByReference {
		
	};
	public static class ByValue extends PixaComp implements Structure.ByValue {
		
	};
}
